使用命名管道+变长结构体完成如下功能：客户端进程首先选择要服务端完成的功能，输入1表示读取指定文本文件内容，输入2表示获取指定文件长度，服务端反馈对应结果给客户端，由客户端显示相应结果
       注：所谓客户端进程就是发出服务请求并接收服务处理结果的进程
           所谓服务端进程就是接收、处理服务请求并向客户端进程发送处理结果的进程
       提示：
		1. 用两个命名管道，一个管道负责客户端发送服务端接收，另一个管道负责服务端发送客户端接收
                2. 通信协议
                   客户端发送向服务端的数据有两种：
			1) 获取文件内容的请求(request) 
			2）获取文件大小的请求
                   服务端发送向客户端的数据两种：
			1）获取文件内容的回应(response)
			2）获取文件大小的回应
		3. 采用如下变长结构体将四种数据整合成一种数据类型
                        struct filepdu
			{
				int len;//整个PDU的字节数
				int type;//1-表示获取文件内容的请求 2-表示获取文件内容的回应 3-表示获取文件大小的请求 4-表示获取文件大小的回应
				char data[1];//本成员开始存放每种type对应的数据，具体如下：
                                            /*type为1时：字符串，字符串内容为文件名
                                              type为2时：前4个字节为整数，该整数表示处理是否成功，0表示成功，其它值表示失败
                                              		 后续字节，如果成功获得文件内容则存放文件内容，否则无本部分	           
                                              type为3时：字符串，字符串内容为文件名
                                              type为4时：前4个字节为整数，该整数表示处理是否成功，0表示成功，其它值表示失败
                                              		 后续字节，如果成功获得文件内容则用4个字节存放文件大小，否则无本部分	           
                                            */
			};
			协议封装函数：
			1. create_getcontent_request
                        2. create_getlength_request
                        3. create_getcontent_response
			4. create_getlength_response
			5. send_filepdu
			6. recv_filepdu
			7. destroy_filepdu


/*客户端编译*/
gcc ./client/client.c ./client/mygets.c filepdu.c -I./ -o clt -Wall

/*服务端编译*/
gcc ./server/server.c filepdu.c -I. -o svr -Wall

